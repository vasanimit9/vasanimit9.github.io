{"version":3,"sources":["components/Navbar.tsx","utilMethods.tsx","strings.tsx","components/Sidebar.tsx","components/Home.tsx","components/Projects.tsx","components/Experience.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["Navbar","props","className","type","onClick","halfmoon","toggleSidebar","icon","faBars","title","toggleDarkMode","darkMode","faSun","faMoon","React","memo","combineClasses","classes","join","Tag","TagBody","noMargin","bgColor","tagBgColors","Math","floor","random","length","text","styled","div","strings","brand","homepage","hero","prelude","name","subtitle","contact","linkedin","github","projects","description","repo","website","technologies","experience","org","position","startDate","endDate","Sidebar","location","useLocation","onClickLink","useCallback","window","innerHeight","innerWidth","routeMap","map","routeData","index","classList","link","pathname","push","to","Home","useState","visibleLength","setVisibleLength","contactButtons","href","contactButtonClassList","target","rel","style","contactButtonStyle","faLinkedinIn","faGithub","useEffect","setTimeout","containerClassList","heroStyle","slice","subtitleClassList","contactButtonsContainerClassList","fontSize","borderRadius","Projects","ProjectCard","project","projectCardStyle","projectCardClassList","projectTitleStyle","projectTitleClassList","projectContentClassList","TechContainer","tech","buttonClassList","buttonStyles","faGitAlt","faGlobe","projectsContainerClassListDesktop","projectContainerClassList","projectsContainerClassListMobile","Experience","Timeline","exp","Container","even","Card","cardClassList","expCardTitleClassList","expCardSubtitleClassList","expCardContentClassList","buttonContainerClassList","appStyle","fontFamily","App","setDarkMode","faHome","component","faTools","faTasks","onDOMContentLoaded","darkModeDetect","document","body","contains","observer","MutationObserver","observe","attributes","disconnect","path","exact","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.854fd69c.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars, faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\nimport halfmoon from \"halfmoon\";\nimport React from \"react\";\n\ninterface Props {\n  title?: string;\n  darkMode: boolean;\n}\n\nconst Navbar = (props: Props) => {\n  return (\n    <nav className=\"navbar justify-content-between\">\n      <div className=\"navbar-content\">\n        <button\n          className=\"btn\"\n          type=\"button\"\n          onClick={() => halfmoon.toggleSidebar()}\n        >\n          <FontAwesomeIcon icon={faBars} />\n        </button>\n      </div>\n\n      <div className=\"navbar-brand\">{props.title}</div>\n      <div className=\"navbar-content\">\n        <button\n          className=\"btn\"\n          type=\"button\"\n          title=\"toggle dark mode\"\n          onClick={() => halfmoon.toggleDarkMode()}\n        >\n          <FontAwesomeIcon icon={props.darkMode ? faSun : faMoon} />\n        </button>\n      </div>\n    </nav>\n  );\n};\n\nexport default React.memo(Navbar);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const combineClasses = (classes: string[]) => classes.join(\" \");\n\nexport const Tag = React.memo((props: { text: string; noMargin?: boolean }) => {\n  return (\n    <TagBody\n      noMargin={props.noMargin}\n      bgColor={tagBgColors[Math.floor(Math.random() * tagBgColors.length)]}\n    >\n      {props.text}\n    </TagBody>\n  );\n});\n\nconst TagBody = styled.div<{ bgColor?: string; noMargin?: boolean }>`\n  padding: 0px 5px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  border-radius: 2px;\n  ${(props) => props.bgColor && `background: ${props.bgColor};`}\n  ${(props) => !props.noMargin && `margin: 0 8px 16px;`}\n`;\n\nconst tagBgColors = [\n  \"#C2185B\",\n  \"#1976D2\",\n  \"#388E3C\",\n  \"#455A64\",\n  \"#512DA8\",\n  \"#00796B\",\n  \"#FF5722\",\n];\n","import { InfoStrings } from \"./types\";\nimport { Tag } from \"./utilMethods\";\n\nconst strings: InfoStrings = {\n  brand: \"Mit Vasani\",\n  homepage: {\n    hero: {\n      prelude: \"Hi, I am\",\n      name: \"Mit Vasani.\",\n      subtitle: (\n        <>\n          I am an enthusiastic developer. I love <Tag text=\"React\" noMargin />{\" \"}\n          and <Tag text=\"TypeScript\" noMargin />. Outside dev, at any random\n          point in time and space, you'd most probably find me watching anime,\n          reading, and/or writing.\n        </>\n      ),\n    },\n  },\n  contact: {\n    linkedin: \"https://www.linkedin.com/in/mit-vasani-8321a2138/\",\n    github: \"https://github.com/vasanimit9\",\n  },\n  projects: [\n    {\n      name: \"Anime Alchemist: The Mobile App\",\n      description:\n        \"A mobile app built in React Native for anime fans by an anime fan, \" +\n        \"initially written in Flutter\",\n      repo: \"https://github.com/vasanimit9/anime-alchemist-app\",\n      website: \"https://expo.io/@vasanimit9/projects/anime-alchemist\",\n      technologies: [\"React Native\", \"Expo\", \"Redux\", \"Flutter\"],\n    },\n    {\n      name: \"Anime Alchemist: The PWA\",\n      description:\n        \"A PWA built in React and Flask, for anime fans by an anime fan.\" +\n        \" It was live at www.animealchemist.xyz during Jan 2020 - Jan 2021.\",\n      repo: \"https://github.com/vasanimit9/www.animealchemist.xyz\",\n      technologies: [\"React\", \"Flask\", \"Service Workers\"],\n    },\n    {\n      name: \"Terminal Portfolio PWA\",\n      description: \"A portfolio website modeled after the terminal.\",\n      repo: \"https://github.com/vasanimit9/terminal-pwa\",\n      website: \"https://vasanimit9.github.io/terminal-pwa\",\n      technologies: [\"React\", \"Service Workers\"],\n    },\n    {\n      name: \"Price Comparison Tool\",\n      description:\n        \"A webapp built with Flask and Selenium to \" +\n        \"fetch prices from various ecommerce platforms and compare them.\",\n      repo: \"https://github.com/vasanimit9/\",\n      technologies: [\"Flask\", \"Selenium\", \"Beautiful Soup\"],\n    },\n  ],\n  experience: [\n    {\n      org: \"Utilize.app\",\n      position: \"Software Development Intern\",\n      description: (\n        <>\n          Implemented new features in frontend for the app builder and apps, in\n          alignment with figma prototypes and LLD.\n        </>\n      ),\n      homepage: \"https://www.utilize.app/\",\n      startDate: \"Jan 2021\",\n      endDate: \"present\",\n      technologies: [\"React\", \"React Native\", \"TypeScript\", \"Redux\"],\n    },\n    {\n      org: \"DA-IICT\",\n      position: \"Research Intern\",\n      description:\n        \"Worked on and compiled data of Lok Sabha elections \" +\n        \"and then studied the data w.r.t. opinion dynamics.\",\n      homepage: \"https://www.daiict.ac.in/\",\n      startDate: \"Jan 2020\",\n      endDate: \"Jun 2020\",\n      technologies: [\"Matplotlib\", \"Numpy\"],\n    },\n    {\n      org: \"DA-IICT\",\n      position: \"Summer Research Intern\",\n      description:\n        \"Studied, simulated, and animated cellular automata with rule based models like the Galam Model \" +\n        \"and the Sznajd model\",\n      homepage: \"https://www.daiict.ac.in/\",\n      startDate: \"Jun 2019\",\n      endDate: \"Jul 2019\",\n      technologies: [\"Matplotlib\", \"Numpy\"],\n    },\n    {\n      org: \"Lyearn\",\n      position: \"Instructional Design Intern\",\n      homepage: \"https://www.lyearn.com\",\n      startDate: \"Jun 2018\",\n      endDate: \"Jul 2018\",\n    },\n  ],\n};\n\nexport default strings;\n","import React, { useCallback } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { RouteMapItem } from \"../types\";\nimport halfmoon from \"halfmoon\";\n\ninterface SidebarProps {\n  routeMap: RouteMapItem[];\n}\n\nconst Sidebar = (props: SidebarProps) => {\n  const location = useLocation();\n\n  const onClickLink = useCallback(() => {\n    if (window.innerHeight > window.innerWidth) {\n      halfmoon.toggleSidebar();\n    }\n  }, []);\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-menu\">\n        {props.routeMap.map((routeData, index) => {\n          const classList = [\"sidebar-link\", \"sidebar-link-with-icon\"];\n          if (routeData.link === location.pathname) {\n            classList.push(\"active\");\n          }\n          return (\n            <Link\n              key={index}\n              to={routeData.link}\n              onClick={onClickLink}\n              className={classList.join(\" \")}\n            >\n              <span className=\"sidebar-icon\">{routeData.icon}</span>\n              {routeData.name}\n            </Link>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Sidebar);\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useState } from \"react\";\nimport strings from \"../strings\";\nimport { combineClasses } from \"../utilMethods\";\nimport { faGithub, faLinkedinIn } from \"@fortawesome/free-brands-svg-icons\";\n\nconst Home = () => {\n  const [visibleLength, setVisibleLength] = useState(0);\n\n  const contactButtons = [\n    <a\n      href={strings.contact.linkedin}\n      className={combineClasses(contactButtonClassList)}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      style={contactButtonStyle}\n      key={strings.contact.linkedin}\n    >\n      <FontAwesomeIcon icon={faLinkedinIn} />\n    </a>,\n    <a\n      href={strings.contact.github}\n      className={combineClasses(contactButtonClassList)}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      style={contactButtonStyle}\n      key={strings.contact.github}\n    >\n      <FontAwesomeIcon icon={faGithub} />\n    </a>,\n  ];\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (visibleLength < strings.homepage.hero.name.length) {\n        setVisibleLength((length) => length + 1);\n      }\n    }, 100);\n  }, [visibleLength]);\n\n  return (\n    <div className={combineClasses(containerClassList)}>\n      <div style={heroStyle}>\n        <br />\n        {strings.homepage.hero.prelude}&nbsp;\n        <br className=\"hidden-md-and-up\" />\n        {strings.homepage.hero.name.slice(0, visibleLength)}\n      </div>\n      <div className={combineClasses(subtitleClassList)}>\n        {strings.homepage.hero.subtitle}\n      </div>\n      <div className={combineClasses(contactButtonsContainerClassList)}>\n        {contactButtons}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Home);\n\nconst containerClassList: string[] = [\n  \"container\",\n  \"d-flex\",\n  \"flex-column\",\n  \"align-items-start\",\n  \"justify-content-start\",\n  \"w-full\",\n  \"h-half\",\n  \"px-20\",\n];\n\nconst heroStyle: React.CSSProperties = {\n  fontSize: 54,\n};\n\nconst contactButtonsContainerClassList: string[] = [\n  \"d-flex\",\n  \"justify-content-between\",\n];\n\nconst contactButtonStyle: React.CSSProperties = {\n  borderRadius: 25,\n};\n\nconst contactButtonClassList: string[] = [\n  \"btn\",\n  \"ml-5\",\n  \"mr-10\",\n  \"d-flex\",\n  \"align-items-center\",\n  \"btn-primary\",\n  \"justify-content-center\",\n  \"w-25\",\n];\n\nconst subtitleClassList: string[] = [\"mb-20\", \"ml-5\", \"font-size-18\"];\n","import { faGitAlt } from \"@fortawesome/free-brands-svg-icons\";\nimport { faGlobe } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport strings from \"../strings\";\nimport { ProjectInfo } from \"../types\";\nimport { combineClasses, Tag } from \"../utilMethods\";\nimport styled from \"styled-components\";\n\nconst Projects = () => {\n  const ProjectCard = ({ project }: { project: ProjectInfo }) => (\n    <div\n      style={projectCardStyle}\n      className={combineClasses(projectCardClassList)}\n    >\n      <div\n        style={projectTitleStyle}\n        className={combineClasses(projectTitleClassList)}\n      >\n        {project.name}\n      </div>\n      <div className={combineClasses(projectContentClassList)}>\n        {project.description}\n      </div>\n      {project.technologies && (\n        <TechContainer>\n          {project.technologies?.map((tech, index) => (\n            <Tag text={tech} key={index} />\n          ))}\n        </TechContainer>\n      )}\n      <div>\n        <a\n          href={project.repo}\n          className={combineClasses(buttonClassList)}\n          rel=\"noreferrer noopener\"\n          target=\"_blank\"\n          style={buttonStyles}\n        >\n          <FontAwesomeIcon icon={faGitAlt} />\n        </a>\n        {project.website && (\n          <a\n            href={project.website}\n            className={combineClasses(buttonClassList)}\n            rel=\"noreferrer noopener\"\n            target=\"_blank\"\n            style={buttonStyles}\n          >\n            <FontAwesomeIcon icon={faGlobe} />\n          </a>\n        )}\n      </div>\n    </div>\n  );\n\n  return (\n    <div className={combineClasses(containerClassList)}>\n      <div className={combineClasses(projectsContainerClassListDesktop)}>\n        <div className={combineClasses(projectContainerClassList)}>\n          {strings.projects.map((project, index) => {\n            if (index % 3 !== 0) {\n              return null;\n            }\n            return <ProjectCard project={project} key={index} />;\n          })}\n        </div>\n        <div className={combineClasses(projectContainerClassList)}>\n          {strings.projects.map((project, index) => {\n            if (index % 3 !== 1) {\n              return null;\n            }\n            return <ProjectCard project={project} key={index} />;\n          })}\n        </div>\n        <div className={combineClasses(projectContainerClassList)}>\n          {strings.projects.map((project, index) => {\n            if (index % 3 !== 2) {\n              return null;\n            }\n            return <ProjectCard project={project} key={index} />;\n          })}\n        </div>\n      </div>\n      <div className={combineClasses(projectsContainerClassListMobile)}>\n        <div className={combineClasses(projectContainerClassList)}>\n          {strings.projects.map((project, index) => {\n            return <ProjectCard project={project} key={index} />;\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Projects);\n\nconst projectCardStyle: React.CSSProperties = {};\n\nconst containerClassList: string[] = [\n  \"container-fluid\",\n  \"p-20\",\n  \"h-full\",\n  \"w-full\",\n];\n\nconst projectsContainerClassListDesktop: string[] = [\n  \"row\",\n  \"hidden-sm-and-down\",\n];\n\nconst projectsContainerClassListMobile: string[] = [\"row\", \"hidden-md-and-up\"];\n\nconst projectContainerClassList: string[] = [\"col-md-4\"];\n\nconst projectCardClassList: string[] = [\n  \"card\",\n  \"d-flex\",\n  \"flex-column\",\n  \"align-items-center\",\n  \"justify-content-between\",\n];\n\nconst projectTitleStyle: React.CSSProperties = {};\n\nconst projectTitleClassList: string[] = [\n  \"card-title\",\n  \"d-flex\",\n  \"flex-column\",\n  \"justify-content-center\",\n  \"mb-20\",\n  \"text-center\",\n];\n\nconst projectContentClassList: string[] = [\"mb-20\", \"text-center\"];\n\nconst buttonClassList: string[] = [\n  \"btn\",\n  \"mx-5\",\n  \"btn-primary\",\n  \"w-25\",\n  \"d-inline-flex\",\n  \"justify-content-center\",\n  \"align-items-center\",\n];\n\nconst buttonStyles: React.CSSProperties = {\n  borderRadius: 25,\n};\n\nconst TechContainer = styled.div`\n  display: inline-block;\n  text-align: center;\n  width: 100%;\n  font-size: 1.4rem;\n`;\n","import { faGlobe } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport strings from \"../strings\";\nimport { combineClasses, Tag } from \"../utilMethods\";\n\nconst Experience = ({ darkMode }: { darkMode: boolean }) => {\n  return (\n    <Timeline darkMode={darkMode}>\n      {strings.experience.map((exp, index) => (\n        <Container\n          darkMode={darkMode}\n          even={index % 2 === 1}\n          className={combineClasses(containerClassList[index % 2])}\n          key={index}\n        >\n          <Card className={combineClasses(cardClassList)}>\n            <div className={combineClasses(expCardTitleClassList)}>\n              {exp.org}\n            </div>\n            <div className={combineClasses(expCardSubtitleClassList)}>\n              {exp.position},\n              <br />\n              {exp.startDate} - {exp.endDate}\n            </div>\n            {exp.description && (\n              <div className={combineClasses(expCardContentClassList)}>\n                {exp.description}\n              </div>\n            )}\n\n            {exp.technologies && (\n              <TechContainer>\n                {exp.technologies?.map((tech, index) => (\n                  <Tag text={tech} key={index} />\n                ))}\n              </TechContainer>\n            )}\n            {exp.homepage && (\n              <div className={combineClasses(buttonContainerClassList)}>\n                <a\n                  href={exp.homepage}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  style={buttonStyles}\n                  className={combineClasses(buttonClassList)}\n                >\n                  <FontAwesomeIcon icon={faGlobe} />\n                </a>\n              </div>\n            )}\n          </Card>\n        </Container>\n      ))}\n    </Timeline>\n  );\n};\n\nexport default React.memo(Experience);\n\nconst Timeline = styled.div<{ darkMode: boolean }>`\n  width: 100%;\n  margin: 25px auto;\n  position: relative;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    width: 6px;\n    background-color: ${(props) => (props.darkMode ? `white` : `#25282c`)};\n    top: 0;\n    bottom: 0;\n    left: 50%;\n    margin-left: -3px;\n    border-radius: 3px;\n  }\n\n  @media screen and (max-width: 768px) {\n    &::after {\n      left: 2rem;\n    }\n  }\n`;\n\nconst Container = styled.div<{ even: boolean; darkMode: boolean }>`\n  ${(props) => props.even && `left: 50%;`}\n  padding: 0 25px;\n  &::after {\n    content: \"\";\n    position: absolute;\n    height: 2rem;\n    width: 2rem;\n    ${(props) =>\n      props.darkMode\n        ? `\n      background-color: #1890ff;\n      border: 4px solid white;\n    `\n        : `background-color: #1890ff;`}\n    top: 3.5rem;\n    ${(props) => (props.even ? `left: -1rem;` : `right: -1rem;`)}\n    border-radius: 50%;\n    z-index: 1;\n  }\n\n  @media screen and (max-width: 768px) {\n    left: 0;\n    &::after {\n      left: 1rem;\n      top: 2.5rem;\n    }\n  }\n`;\n\nconst containerClassList: string[][] = [\n  [\"col-md-5\", \"offset-md-1\"],\n  [\"col-md-5\"],\n];\n\nconst Card = styled.div`\n  border-radius: 6px !important;\n`;\n\nconst cardClassList: string[] = [\"card\"];\n\nconst expCardTitleClassList: string[] = [\n  \"card-title\",\n  \"d-flex\",\n  \"flex-column\",\n  \"justify-content-center\",\n  \"mb-5\",\n  \"text-center\",\n];\n\nconst expCardSubtitleClassList: string[] = [\n  \"font-size-16\",\n  \"mb-10\",\n  \"w-full\",\n  \"text-center\",\n];\n\nconst expCardContentClassList: string[] = [\"mb-20\", \"text-center\"];\n\nconst buttonContainerClassList: string[] = [\n  \"w-full\",\n  \"d-flex\",\n  \"justify-content-center\",\n];\n\nconst buttonClassList: string[] = [\n  \"btn\",\n  \"mx-5\",\n  \"btn-primary\",\n  \"w-25\",\n  \"d-inline-flex\",\n  \"justify-content-center\",\n  \"align-items-center\",\n  \"mx-auto\",\n];\n\nconst buttonStyles: React.CSSProperties = {\n  borderRadius: 25,\n};\n\nconst TechContainer = styled.div`\n  display: inline-block;\n  text-align: center;\n  width: 100%;\n  font-size: 1.4rem;\n`;\n","import { useEffect, useState } from \"react\";\nimport halfmoon from \"halfmoon\";\nimport \"halfmoon/css/halfmoon.min.css\";\nimport Navbar from \"./components/Navbar\";\nimport strings from \"./strings\";\nimport Sidebar from \"./components/Sidebar\";\nimport Home from \"./components/Home\";\nimport { Route } from \"react-router\";\nimport { RouteMapItem } from \"./types\";\nimport Projects from \"./components/Projects\";\nimport Experience from \"./components/Experience\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome, faTasks, faTools } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n\n  const routeMap: RouteMapItem[] = [\n    {\n      icon: <FontAwesomeIcon icon={faHome} />,\n      link: \"/\",\n      name: \"Home\",\n      component: <Home />,\n    },\n    {\n      icon: <FontAwesomeIcon icon={faTools} />,\n      link: \"/experience\",\n      name: \"Experience\",\n      component: <Experience darkMode={darkMode} />,\n    },\n    {\n      icon: <FontAwesomeIcon icon={faTasks} />,\n      link: \"/projects\",\n      name: \" Projects\",\n      component: <Projects />,\n    },\n  ];\n\n  useEffect(() => {\n    halfmoon.onDOMContentLoaded();\n  }, []);\n\n  useEffect(() => {\n    const darkModeDetect = () => {\n      if (document.body.classList.contains(\"dark-mode\")) {\n        setDarkMode(true);\n      } else {\n        setDarkMode(false);\n      }\n    };\n\n    darkModeDetect();\n\n    const observer = new MutationObserver(darkModeDetect);\n    observer.observe(document.body, { attributes: true });\n\n    return () => observer.disconnect();\n  }, []);\n\n  return (\n    <div className=\"page-wrapper with-navbar with-sidebar\" style={appStyle}>\n      <Navbar title={strings.brand} darkMode={darkMode} />\n      <Sidebar routeMap={routeMap} />\n      <div className=\"content-wrapper\">\n        {routeMap.map((routeData, index) => {\n          return (\n            <Route key={index} path={routeData.link} exact>\n              {routeData.component}\n            </Route>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nconst appStyle: React.CSSProperties = {\n  fontFamily: \"Varela Round\",\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n"],"sourceRoot":""}